AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Student Grading System Lambda
Resources:

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers: 
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyAuthFunction.Arn
  
  StudentLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.studentService
      Runtime: nodejs10.x
      CodeUri: ./LambdaCodeNodeJS
      #Policies:
      #  - DynamoDBCrudPolicy:
      #      TableName: !Ref carModelTableName
      #Environment:
      #  Variables:
      #    TABLE_NAME1: !Ref carModelTableName 
      Events:
        SearchModelAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /getStudentsList
            Method: GET
      Timeout: 100
      
  StudentGradingLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: student_lambda_function.student_handler
      Runtime: python3.6
      CodeUri: ./LambdaCode
      Description: 'Lambda function for student grading system'
      MemorySize: 128
      Timeout: 30
      # Role: 'arn:aws:iam::397410853951:role/MyLambdaRole'
      Events:
        getStudentsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /getstudents
            Method: get
      Environment:
        Variables:
          REGION: ap-southeast-1

  MyAuthFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./authorizer
      Handler: handler.authorizer
      Runtime: nodejs10.x
 
Outputs:
  Region:
    Description: "Region"
    Value: !Ref AWS::Region

  ApiId:
    Description: "API ID"
    Value: !Ref MyApi

  ApiUrl:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/'
